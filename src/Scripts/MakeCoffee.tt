<#@ import namespace="System" #>
<#@ import namespace="System.IO" #>
<#@ assembly name="$(SolutionDir)/packages/CoffeeSharp.0.2/lib/CoffeeSharp.dll" #>
<#@ import namespace="CoffeeSharp" #>
<#= MakeCoffee() #>

<#
	//  To automatically convert *.coffee files there are two possibilities
	//	1.  Using T4Toolbox, set the "Custom Tool" of the coffee file to 'T4ScriptFileGenerator', this will
	//	    cause a tt file to appear below the coffee file.  Put the following templating code in there and
	//	    the converted js file should pop-up (remove the tag spaces):
	//			< #@ template language="C#" hostspecific="True" # >
	//			< #@ output extension=".coffee.js" # >
	//			< #@ include file="MakeCoffee.tt" # >
	//		This way, every time the coffee file is saved, the generated js file will be updated automatically
	//	2.  Without T4Toolbox, add a T4 template to your scripts folder and put the following T4 code in it 
	//      (remove the tag spaces):
	//			< #@ template language="C#" hostspecific="True" # >
	//			< #@ output extension=".coffee.js" # >
	//			< #@ include file="MakeCoffee.tt"  # >
	//			< #= MakeCoffee("<your.coffee>")   # >
	//		This will work but the resulting js code will not be generated each time the coffee file is changed, 
	//		but each time perform "Run Custom Tool" from the T4 file's context menu.
#>	
	
<#+
  	public class CoffeeMachine
	{
		private static CoffeeScriptEngine Engine = new CoffeeSharp.CoffeeScriptEngine();
		
		public string Input { get; private set;}
		
		public CoffeeMachine(string inputFile)
		{
			Input = inputFile;
		}
		
		public string Compile()
		{
			using(var reader = new StreamReader(Input))
			{
				string code = reader.ReadToEnd();
				return Engine.Compile(code);
			}
		}
	}
	
	string MakeCoffee(string name)
	{
		var fullPath = Host.ResolvePath(name);
		var machine = new CoffeeMachine(fullPath);
		return machine.Compile();
	}
	
	string MakeCoffee()
	{
		var templatePath = this.Host.TemplateFile;		
		var templateFolder = Path.GetDirectoryName(templatePath);
		var coffeeScriptFile = string.Format("{0}.coffee", Path.GetFileNameWithoutExtension(this.Host.TemplateFile));		
		var coffeeScriptPath = Path.Combine(templateFolder, coffeeScriptFile);
		
		if (!File.Exists(coffeeScriptPath))
			return string.Empty;
		
		return MakeCoffee(coffeeScriptFile);
	}
#>